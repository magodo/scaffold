// Code generated by go generate; DO NOT EDIT.
package main

import (
	"os"
	"text/template"
	"path/filepath"
)

var (
	templateDirs = []string{
	}

	templateFiles = map[string]string{
	
		".gitignore": `server
test.bin
cmd/server/ver.go
`,
		"main.go": `package main

import "fmt"

func main() {
	fmt.Println("{{.GreetMsg}}")
}
`,
	}
)

func GenScaffold(outdir string, data interface{}) error {
	for _, dir := range templateDirs {
		dir = filepath.Join(outdir, dir)
		if err := os.MkdirAll(dir, os.ModePerm); err != nil {
			return err
		}
	}

	for path, content := range templateFiles {
		path = filepath.Join(outdir, path)
		dir := filepath.Dir(path)
		if err := os.MkdirAll(dir, os.ModePerm); err != nil {
			return err
		}
		f, err := os.Create(path)
		if err != nil {
			return err
		}
		defer f.Close()

		t, err := template.New("").Parse(content)
		if err != nil {
			return err
		}
		if err := t.Execute(f, data); err != nil {
			return err
		}
	}

	return nil
}